name: Release

on:
  workflow_dispatch:
  push:
    branches: [main]

permissions:
  contents: write

jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 5
      - uses: pnpm/action-setup@v2
        with:
          version: latest
      - uses: actions/setup-node@v3
        with:
          node-version: "*"
          check-latest: true
          cache: "pnpm"
          cache-dependency-path: settings/pnpm-lock.yaml
      - run: |
          Push-Location
          Set-Location settings
          pnpm install --frozen-lockfile
          Pop-Location
      - uses: actions/cache@v3
        id: library-cache
        with:
          path: build/_deps
          key: library-cache-${{ hashFiles('**/CMakeLists.txt') }}
      - env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          $vswhere = "${Env:ProgramFiles(x86)}\Microsoft Visual Studio\Installer\vswhere.exe"
          $vspath = & $vswhere -products * -latest -property installationPath
          & "$vspath\Common7\Tools\Launch-VsDevShell.ps1" -HostArch amd64 -Arch amd64 -SkipAutomaticLocation

          cmake --preset release
          cmake --build --preset release

          $zip = Get-Item "build/Airglow.zip"
          $installer = Get-Item "build/install.ps1"
          $version = Get-Content "build/app_version.txt"
          $notes = Get-Item "build/release_notes.txt"
          $commit = git rev-parse --short HEAD

          if ("${{ github.ref_name }}" -eq "main") {
            gh release delete stable -y
            git tag -f stable $commit
            git push --tags --force
            gh release create stable $zip $installer -F $notes -t "Airglow $version"
          }

          if ("${{ github.ref_name }}" -eq "dev") {
            gh release delete nightly -y
            git tag -f nightly $commit
            git push --tags --force
            gh release create nightly $zip -F $notes -t "Airglow Nightly" -p
          }
